<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://luxin-oi.github.io/</id>
    <title>luxin</title>
    <updated>2020-03-11T14:50:11.234Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://luxin-oi.github.io/"/>
    <link rel="self" href="https://luxin-oi.github.io/atom.xml"/>
    <subtitle>♥Andromeda♥</subtitle>
    <logo>https://luxin-oi.github.io/images/avatar.png</logo>
    <icon>https://luxin-oi.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, luxin</rights>
    <entry>
        <title type="html"><![CDATA[网络流模板]]></title>
        <id>https://luxin-oi.github.io/post/wang-luo-liu-mo-ban/</id>
        <link href="https://luxin-oi.github.io/post/wang-luo-liu-mo-ban/">
        </link>
        <updated>2020-03-11T14:42:34.000Z</updated>
        <content type="html"><![CDATA[<h3 id="dinic">Dinic</h3>
<pre><code class="language-c++">const int maxn = 50000+50;
const int maxm = 200000+200;
#define Ci const int &amp;
int n,m,s,t;
struct edge{
    int u,v,n,flow;
    I edge(Ci _u=0,Ci _v=0,Ci _n=0,Ci _flow=0):u(_u),v(_v),n(_n),flow(_flow){}
}e[maxm];
int cnt=1,head[maxn],cur[maxn];
I void add(Ci u,Ci v,Ci flow){
    e[++cnt]=edge(u,v,head[u],flow),head[u]=cnt;
    e[++cnt]=edge(v,u,head[v],0),head[v]=cnt;
}
int dep[maxn];
I bool bfs(){
    queue&lt;int&gt;q;
    memset(dep,0,sizeof dep);
    memcpy(cur,head,sizeof(head));
    dep[s]=1,q.push(s);
    while(!q.empty()){
        int u=q.front();q.pop();
        for(int ee=head[u],v;v=e[ee].v,ee;ee=e[ee].n)
            if(e[ee].flow&amp;&amp;dep[v]==0)
                dep[v]=dep[u]+1,q.push(v);
    }
    return dep[t];
}
int dfs(int u,int limit){
    if(limit==0||u==t)return limit;
    int flow=0,f;
    for(int ee=cur[u],v;cur[u]=ee,v=e[ee].v,ee;ee=e[ee].n)
        if(dep[v]==dep[u]+1&amp;&amp;(f=dfs(v,min(limit,e[ee].flow)))){
            flow+=f;
            limit-=f;
            e[ee].flow-=f;
            e[ee^1].flow+=f;
            if(!limit)break;
        }
    return flow;
}
I int dinic(){
    int ans=0;
    while(bfs())
            ans+=dfs(s,inf);
        return ans;
}
signed main(){
    read(n),read(m),read(s),read(t);
    int u,v,f;
    FOR(i,1,m)
        read(u),read(v),read(f),
        add(u,v,f);
    write(dinic());
    flush();
    return 0;
}
</code></pre>
<h3 id="isap">ISAP</h3>
<pre><code class="language-c++">int tot,s,t;
const int maxn = 50000+50;
const int maxm = 200000+200;
#define ci const int &amp;
struct edge{
    int u,v,f,n;
    I edge(ci uu =0,ci vv=0,ci ff=0,ci nn=0):u(uu),v(vv),f(ff),n(nn){}
}e[maxm];
int cnt=1,head[maxn],cur[maxn],gap[maxn],dis[maxn];
I void add(ci u,ci v,ci f){
    e[++cnt]=edge(u,v,f,head[u]),head[u]=cnt;
    e[++cnt]=edge(v,u,0,head[v]),head[v]=cnt;
}
I void bfs(){
    // memset(dis,0,sizeof dis);
    // memset(gap,0,sizeof gap);
    queue&lt;int&gt;q;q.push(t),gap[dis[t]=1]++;
    while(!q.empty()){
        int u=q.front();q.pop();
        for(int ee=head[u],v;v=e[ee].v,ee;ee=e[ee].n)
        if(!dis[v])gap[dis[v]=dis[u]+1]++,q.push(v);
    }
}
int dfs(ci u,ci flow){
    if(u==t)return flow;
    int us=0,f;
    for(int ee=cur[u],v;cur[u]=ee,v=e[ee].v,ee;ee=e[ee].n)
        if(dis[v]==dis[u]-1){
            if(f=dfs(v,min(flow-us,e[ee].f)))
                e[ee].f-=f,e[ee^1].f+=f,us+=f;
            if(us==flow)return flow;
        }
    (--gap[dis[u]])?(++gap[++dis[u]]):dis[s]=tot+1;
    return us;
}
I int isap(){
    int ans=0;
    bfs();
    while(dis[s]&lt;=tot+1)
        memcpy(cur,head,sizeof head),
        ans+=dfs(s,inf);
    return ans;
}
int n,m;
signed main(){
    int u,v,f;
    read(n),read(m),read(s),read(t);
    tot=n;
    FOR(i,1,m)read(u),read(v),read(f),add(u,v,f);
    write(isap());
    flush();
    return 0;
}
</code></pre>
<h3 id="费用流">费用流</h3>
<pre><code class="language-c++">const int maxn = 50000+500;
const int maxm = 200000+2000;
#define ci const int &amp;
struct edge{
    int u,v,f,w,n;
    I edge(ci uu=0,ci vv=0,ci ff=0,ci ww=0,ci nn=0):u(uu),v(vv),f(ff),w(ww),n(nn){}
}e[maxm];
int dis[maxn],vis[maxn],cur[maxn],head[maxn],cnt=1,n,m,s,t;
int cost=0,flow=0;
I void add(ci u,ci v,ci f,ci w){
    e[++cnt]=edge(u,v,f,w,head[u]),head[u]=cnt;
    e[++cnt]=edge(v,u,0,-w,head[v]),head[v]=cnt;
}
I bool spfa(ci s,ci t){
    memset(vis,0,sizeof vis);
    memset(dis,0x3f,sizeof dis);
    deque&lt;int&gt;q;q.push_front(t);
    vis[t]=1,dis[t]=0;
    while(!q.empty()){
        int u=q.front();q.pop_front();
        for(int ee=head[u],v;v=e[ee].v,ee;ee=e[ee].n)
            if(e[ee^1].f&gt;0&amp;&amp;dis[v]&gt;dis[u]-e[ee].w){
                dis[v]=dis[u]-e[ee].w;
                if(!vis[v])vis[v]=1,(!q.empty()&amp;&amp;dis[q.front()]&gt;dis[v])?
                q.push_front(v):
                q.push_back(v);
            }
        vis[u]=0;
    }
    return dis[s]==0x3f3f3f3f?0:1;
}
int dfs(ci u,ci ff){
    if(u==t)return vis[t]=1,ff;
    int us=0,f;vis[u]=1;
    for(int ee=cur[u],v;cur[u]=ee,v=e[ee].v,ee;ee=e[ee].n)
        if(vis[v]==0&amp;&amp;e[ee].f&gt;0&amp;&amp;dis[u]-e[ee].w==dis[v]){
            if((f=dfs(v,min(e[ee].f,ff-us)))&gt;0)
                cost+=f*e[ee].w,e[ee].f-=f,e[ee^1].f+=f,us+=f;
            if(us==ff)break;
        }
    return us;
}
I void cost_flow(){
    while(spfa(s,t)){
        vis[t]=1;
        while(vis[t]){
            memcpy(cur,head,sizeof head);
            memset(vis,0,sizeof vis);
            flow+=dfs(s,inf);
        }
    }
}
signed main(){
    read(n),read(m),read(s),read(t);
    int u,v,f,w;
    FOR(i,1,m)
        read(u),read(v),read(f),read(w),
        add(u,v,f,w);
    cost_flow();
    write(flow),pc(' '),write(cost);
    flush();
    return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[莫队模板]]></title>
        <id>https://luxin-oi.github.io/post/mo-dui-mo-ban/</id>
        <link href="https://luxin-oi.github.io/post/mo-dui-mo-ban/">
        </link>
        <updated>2020-03-11T14:40:34.000Z</updated>
        <content type="html"><![CDATA[<p>##<a href="https://www.cnblogs.com/WAMonster/p/10118934.html">借鉴的博客</a></p>
<h3 id="莫队">莫队</h3>
<pre><code class="language-c++">const int maxn = 1000000+100;
int n,m,k,len,ans;
int num[maxn],cnt[maxn],a[maxn];
struct query{
    int l,r,in,id;
    I bool operator &lt;(const query &amp;a)const
    {return (in^a.in)?in&lt;a.in:((in&amp;1)?r&lt;a.r:r&gt;a.r);}
}q[maxn];
signed main(){
    read(n);
    int QAQ=pow(n,0.6);
    len=QAQ*QAQ*QAQ;
    for(R int *S=a,*T=a+n;S!=T;)read(*++S);   
    read(m);
    int x,y;
    FOR(i,1,m)
        read(q[i].l),read(q[i].r),
        q[i].in=(q[i].l-1)/len+1,
        q[i].id=i;
    sort(q+1,q+1+m);
    int l=1,r=0;
    FOR(i,1,m){
        int x=q[i].l,y=q[i].r;
        while(l&lt;x)ans-=(!--cnt[a[l++]]);
        while(l&gt;x)ans+=(!cnt[a[--l]]++);
        while(r&lt;y)ans+=(!cnt[a[++r]]++);
        while(r&gt;y)ans-=(!--cnt[a[r--]]);
        num[q[i].id]=ans;
    }
    for(R int *S=num,*T=num+m;S!=T;)write(*++S),pc('\n');
    flush();
    return 0;
}
</code></pre>
<h3 id="待修莫队">待修莫队：</h3>
<pre><code class="language-c++">const int maxn=2*1e6+10;
int n,m,a[maxn],in[maxn];
struct Query{
    int x,y,pre,id;
}Q[maxn];
struct Change{
    int pos,val;
}C[maxn];
int Qnum=0,Cnum=0;
int cnt[maxn],ans=0,base,out[maxn];
I int cmp(const Query &amp;a,const Query &amp;b){
    if(a.x!=b.x)return in[a.x]&lt;in[b.x];
    if(a.y!=b.x)return in[a.y]&lt;in[b.y];
    return a.pre&lt;b.pre;
}
I void work(int now,int i){
    if(C[now].pos&gt;=Q[i].x&amp;&amp;C[now].pos&lt;=Q[i].y){
        if(--cnt[a[C[now].pos]]==0)ans--;
        if(++cnt[C[now].val]==1)ans++;
    }
    swap(C[now].val,a[C[now].pos]);
}
I void MoQueue(){
    int l=1,r=0,now=0;
    FOR(i,1,Qnum){
        while(l&lt;Q[i].x)ans-=!--cnt[a[l++]];
        while(l&gt;Q[i].x)ans+=!cnt[a[--l]]++;
        while(r&lt;Q[i].y)ans+=!cnt[a[++r]]++;
        while(r&gt;Q[i].y)ans-=!--cnt[a[r--]];
        while(now&lt;Q[i].pre)work(++now,i);
        while(now&gt;Q[i].pre)work(now--,i);
        out[Q[i].id]=ans;
    }
    FOR(i,1,Qnum)
        write(out[i]),pc('\n');
}
signed main(){
    read(n),read(m);
    base=pow(n,(double)2/(double)3);
    FOR(i,1,n)read(a[i]),in[i]=(i-1)/base+1;
    while(m--){
        if(Read()){
            read(Q[++Qnum].x),
            read(Q[Qnum].y),
            Q[Qnum].pre=Cnum,
            Q[Qnum].id=Qnum;
        }else{
            read(C[++Cnum].pos);
            read(C[Cnum].val);
        }
    }
    sort(Q+1,Q+Qnum+1,cmp);
    MoQueue();
    flush();
    return 0;
}
</code></pre>
<h3 id="树上莫队">树上莫队：</h3>
<pre><code class="language-c++">//a,cnt,first,last,ans,belong,inp,vis,ncnt,l,r,now,size,bnum莫队相关
int a[maxn],cnt[maxn],first[maxn],last[maxn];
int ans[maxn],belong[maxn],inp[maxn],vis[maxn];
int ord[maxn],val[maxn],head[maxn],dep[maxn];
int fa[maxn][21],ecnt,ncnt,l=1,r,now,len,bnum,n,m;
// ord Euler-pos first Euler-&gt;begin last Euler-&gt;end; 
struct edge{
    int v,n;
    I edge(const int &amp;vv=0,const int &amp; nn=0):v(vv),n(nn){}
}e[maxn];
void add(int u,int v){
    e[++ecnt]=edge(v,head[u]),head[u]=ecnt;
    e[++ecnt]=edge(u,head[v]),head[v]=ecnt;
}
void dfs(int u){
    ord[++ncnt]=u;
    first[u]=ncnt;
    for(int ee=head[u],v;v=e[ee].v,ee;ee=e[ee].n)
        if(v!=fa[u][0]){
            dep[v]=dep[u]+1;
            fa[v][0]=u;
            for(int i=1;(1&lt;&lt;i)&lt;=dep[v];++i)fa[v][i]=fa[fa[v][i-1]][i-1];
            dfs(v);
        }
    ord[++ncnt]=u;
    last[u]=ncnt;
}
int get_lca(int u,int v){
    if(dep[u]&lt;dep[v])swap(u,v);
    for(int i=20;i+1;--i)
        if(dep[u]-(1&lt;&lt;i)&gt;=dep[v])u=fa[u][i];
    if(u==v)return u;
    for(int i=20;i+1;--i)
        if(fa[u][i]!=fa[v][i])u=fa[u][i],v=fa[v][i];
    return fa[u][0];
}
struct query{
    int l,r,lca,id;
}q[maxn];
int cmp(const query &amp;a,const query &amp;b){
    return (belong[a.l]^belong[b.l])?(belong[a.l]&lt;belong[b.l]):((belong[a.l]&amp;1)?a.r&lt;b.r:a.r&gt;b.r);
}
I void work(int pos){
    vis[pos]?
        now-=!--cnt[val[pos]]:
        now+=!cnt[val[pos]]++;
    vis[pos]^=1;
}
signed main(){
    read(n),read(m);
    FOR(i,1,n)read(val[i]),inp[i]=val[i];
    sort(inp+1,inp+1+n);
    int tot=unique(inp+1,inp+1+n)-inp-1;
    FOR(i,1,n)
        val[i]=lower_bound(inp+1,inp+tot+1,val[i])-inp;
    int x,y;
    FOR(i,1,n-1)read(x),read(y),add(x,y);
    dep[1]=1;dfs(1);
    len=sqrt(ncnt),bnum=ceil((double)ncnt/len);
    FOR(i,1,bnum)
        for(int j=len*(i-1)+1;j&lt;=i*len;++j)
            belong[j]=i;
    FOR(i,1,m){
        int x,y,lca;
        read(x),read(y),lca=get_lca(x,y);
        if(first[x]&gt;first[y])swap(x,y);
        if(x==lca){
            q[i].l=first[x];
            q[i].r=first[y];
        }else{
            q[i].l=last[x];
            q[i].r=first[y];
            q[i].lca=lca;
        }
        q[i].id=i;
    }
    sort(q+1,q+1+m,cmp);
    FOR(i,1,m){
        int ql=q[i].l,qr=q[i].r,lca=q[i].lca;
        while(l&lt;ql)work(ord[l++]);
        while(l&gt;ql)work(ord[--l]);
        while(r&lt;qr)work(ord[++r]);
        while(r&gt;qr)work(ord[r--]);
        if(lca)work(lca);
        ans[q[i].id]=now;
        if(lca)work(lca);
    }
    FOR(i,1,m)write(ans[i]),pc('\n');
    flush();
    return 0;
}
</code></pre>
<h3 id="回滚莫队">回滚莫队：</h3>
<pre><code class="language-c++">#include &lt;cstdio&gt;
#include &lt;algorithm&gt;
#include &lt;cstring&gt;
#include &lt;cmath&gt;
using namespace std;
#define maxn 100100
#define maxb 5050
#define ll long long
int aa[maxn], typ[maxn], cnt[maxn], cnt2[maxn], belong[maxn], lb[maxn], rb[maxn], inp[maxn];
ll ans[maxn];
struct query {
    int l, r, id;
} q[maxn];
int n, m, size, bnum;
#define isdigit(x) ((x) &gt;= '0' &amp;&amp; (x) &lt;= '9')
inline int read() {
    int res = 0;
    char c = getchar();
    while(!isdigit(c)) c = getchar();
    while(isdigit(c)) res = (res &lt;&lt; 1) + (res &lt;&lt; 3) + (c ^ 48), c = getchar();
    return res;
}
int cmp(query a, query b) {
    return (belong[a.l] ^ belong[b.l]) ? belong[a.l] &lt; belong[b.l] : a.r &lt; b.r; 
}
int main() {
    n = read(), m = read();
    size = sqrt(n);
    bnum = ceil((double) n / size);
    for(int i = 1; i &lt;= bnum; ++i) {
        lb[i] = size * (i - 1) + 1;
        rb[i] = size * i;
        for(int j = lb[i]; j &lt;= rb[i]; ++j) belong[j] = i;
    }
    rb[bnum] = n;
    for(int i = 1; i &lt;= n; ++i) inp[i] = aa[i] = read();
    sort(inp + 1, inp + n + 1);
    int tot = unique(inp + 1, inp + n + 1) - inp - 1;
    for(int i = 1; i &lt;= n; ++i) typ[i] = lower_bound(inp + 1, inp + tot + 1, aa[i]) - inp;
    for(int i = 1; i &lt;= m; ++i) {
        q[i].l = read(), q[i].r = read();
        q[i].id = i;
    }
    sort(q + 1, q + m + 1, cmp);
    int i = 1;
    for(int k = 0; k &lt;= bnum; ++k) {
        int l = rb[k] + 1, r = rb[k];
        ll now = 0;
        memset(cnt, 0, sizeof(cnt));
        for( ; belong[q[i].l] == k; ++i) {
            int ql = q[i].l, qr = q[i].r;
            ll tmp;
            if(belong[ql] == belong[qr]) {
                tmp = 0;
                for(int j = ql; j &lt;= qr; ++j) cnt2[typ[j]] = 0;
                for(int j = ql; j &lt;= qr; ++j) {
                    ++cnt2[typ[j]]; tmp = max(tmp, 1ll * cnt2[typ[j]] * aa[j]);
                }
                ans[q[i].id] = tmp;
                continue;
            }
            while(r &lt; qr) {
                ++r; ++cnt[typ[r]]; now = max(now, 1ll * cnt[typ[r]] * aa[r]);
            }
            tmp = now;
            while(l &gt; ql){
                --l; ++cnt[typ[l]]; now = max(now, 1ll * cnt[typ[l]] * aa[l]);
            } 
            ans[q[i].id] = now;
            while(l &lt; rb[k] + 1) {
                --cnt[typ[l]];
                l++;
            }
            now = tmp;
        }
    }
    for(int i = 1; i &lt;= m; ++i) printf(&quot;%lld\n&quot;, ans[i]);
    return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Lifting the Stone]]></title>
        <id>https://luxin-oi.github.io/post/lifting-the-stone/</id>
        <link href="https://luxin-oi.github.io/post/lifting-the-stone/">
        </link>
        <updated>2020-03-11T03:39:33.000Z</updated>
        <content type="html"><![CDATA[<h2 id="题目链接"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1115">题目链接</a></h2>
<h2 id="题目大意">题目大意：</h2>
<p>求多边形的重心。</p>
<h2 id="解法">解法：</h2>
<p>对于一个平面多边形<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span></span></span></span>可以被分成<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>个有个的简单图形<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>X</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>X</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>X</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">X_1,X_2,...,X_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，这些简单图形的重心为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">C_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，面积为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>A</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">A_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>,那么这个平面多边形的重心点坐标为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><msub><mi>C</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>C</mi><mi>y</mi></msub><mo>)</mo></mrow><annotation encoding="application/x-tex">(C_x,C_y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mi>x</mi></msub><mo>=</mo><mfrac><mrow><mo>∑</mo><msub><mi>C</mi><msub><mi>i</mi><mi>x</mi></msub></msub><msub><mi>A</mi><mi>i</mi></msub></mrow><mrow><mo>∑</mo><msub><mi>A</mi><mi>i</mi></msub></mrow></mfrac><mo separator="true">,</mo><msub><mi>C</mi><mi>y</mi></msub><mo>=</mo><mfrac><mrow><mo>∑</mo><msub><mi>C</mi><msub><mi>i</mi><mi>y</mi></msub></msub><msub><mi>A</mi><mi>i</mi></msub></mrow><mrow><mo>∑</mo><msub><mi>A</mi><mi>i</mi></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">C_x=\frac{\sum C_{i_x}A_i}{\sum A_i},C_y=\frac{\sum C_{i_y}A_i}{\sum A_i}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.36301em;vertical-align:-0.93601em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6769999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93601em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.42333em;vertical-align:-0.93601em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.48732em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.73732em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166400000000005em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34731999999999996em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93601em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>然后把图形拆分为多个三角形就好了。<br>
<a href="https://www.jianshu.com/p/39ef232ad531">参考链接</a></p>
<h2 id="代码实现">代码实现：</h2>
<pre><code>精度有问题（完）</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[You can Solve a Geometry Problem too]]></title>
        <id>https://luxin-oi.github.io/post/you-can-solve-a-geometry-problem-too/</id>
        <link href="https://luxin-oi.github.io/post/you-can-solve-a-geometry-problem-too/">
        </link>
        <updated>2020-03-11T01:41:32.000Z</updated>
        <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1086">题目连接</a></p>
<h3 id="题目大意">题目大意：</h3>
<p>给出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi><mo>(</mo><mn>1</mn><mo>≤</mo><mi>N</mi><mo>≤</mo><mn>100</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">N(1\le N \le 100)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mclose">)</span></span></span></span>条线段判断有多少个交点，(假如多个线段交于一点应重复计数)。</p>
<h3 id="题目做法">题目做法：</h3>
<p>数据范围很小<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>N</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">N^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>枚举即可。<br>
关于判断是否相交，先判断两条直线是否有交点，然后用叉积判断线段的两个的端点是否跨立另一条线段。</p>
<h3 id="代码实践">代码实践：</h3>
<pre><code class="language-c++">#include &lt;algorithm&gt;
#include &lt;iostream&gt;
#include &lt;cstring&gt;
#include &lt;cstdio&gt;
#include &lt;cctype&gt;
#include &lt;cmath&gt;
using namespace std;
#define I inline
#define R register
#define inf 1073742823
#define FOR(i,begin,end) for(R int i=begin;i&lt;=end;++i)
#define ROF(i,begin,end) for(R int i=begin;i&gt;=end;--i)
const double eps=1e-10;
const double pi=acos(-1.0);
I int dcmp(double x)
{   if(fabs(x)&lt;eps)return 0;
    else return x&lt;0?-1:1;}
#define P point
#define PP const P &amp;
struct point{
    double x,y;
    I P(const double &amp;_x=0,const double &amp;_y=0):x(_x),y(_y){}
    I bool operator ==(PP a)const{return dcmp(x-a.x)==0&amp;&amp;dcmp(y-a.y)==0;}
    I bool operator&lt;(PP a)const{return x&lt;a.x||(x==a.x&amp;&amp;y&lt;a.y);}
    I P operator+(PP a)const{return P(x+a.x,y+a.y);}
    I P operator-(PP a)const{return P(x-a.x,y-a.y);}
    I P operator*(const double a)const{return P(x*a,y*a);}
    I P operator/(const double a)const{return P(x/a,y/a);}
    I P operator*(PP a)const{return P(x*a.x-y*a.y,x*a.y+y*a.x);}
    I double len()const{return sqrt(x*x+y*y);}
    I double len2()const{return x*x+y*y;}
    I P rotate(const double theta)const{return P(x,y)*P(cos(theta),sin(theta));}
    I double operator|(PP a)const{return x*a.x+y*a.y;}
    I double operator&amp;(PP a)const{return x*a.y-y*a.x;}
    I P norm(){return *this/len();}
    I double angle(PP a)const{return *this|a/len()/a.len();}
};
typedef point vec;
const int maxn=110;
struct line{
    P a,b;
}L[maxn];
I int D_pos(PP q,const line A){
    vec k1=q-A.a,k2=A.b-A.a;
    return dcmp(k1&amp;k2); 
}
I bool across(const line &amp;a,const line &amp;b){
    int ans1=D_pos(a.a,b);
    int ans2=D_pos(a.b,b);
    int ans3=D_pos(b.a,a);
    int ans4=D_pos(b.b,a);
    if((ans1&amp;ans2&amp;ans3&amp;ans4)==0)return 1;
    if(ans1!=ans2&amp;&amp;ans3!=ans4)
    return 1;
    else return 0;
}
I bool check(const line &amp;a,const line &amp; b){
    vec k1=a.b-a.a,k2=b.b-b.a;
    if(dcmp(k1&amp;k2)==0)return 0;
    else return across(a,b);
}
signed main(){
    int n;
    while(scanf(&quot;%d&quot;,&amp;n)&amp;&amp;n!=0){
        memset(L,0,sizeof L);
        FOR(i,1,n)
            scanf(&quot;%lf%lf%lf%lf&quot;,&amp;L[i].a.x,&amp;L[i].a.y,&amp;L[i].b.x,&amp;L[i].b.y);
        int ans=0;
        FOR(i,1,n)
            FOR(j,i+1,n)
                ans+=check(L[i],L[j]);
        printf(&quot;%d\n&quot;,ans);
    }
    return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[网络流]]></title>
        <id>https://luxin-oi.github.io/post/wang-luo-liu/</id>
        <link href="https://luxin-oi.github.io/post/wang-luo-liu/">
        </link>
        <updated>2020-03-05T19:29:11.000Z</updated>
        <content type="html"><![CDATA[<p><s>很久之前就想要学习网络流了，最近也刚学了网络流，于是便有了本篇博客。</s></p>
<h2 id="关于算法">关于算法：</h2>
<p><a href="https://luxin-oi.github.io/post/wang-luo-liu-mo-ban/">网络流模板</a><br>
<s>个人喜欢用dinic跑非一次性建边的网络流，用isap跑一次性建边的网络流，用zkw跑费用流，至于HLPP我还不会</s><br>
当然网络流还是要靠建图。</p>
<hr>
<h2 id="网络流24题"><a href="https://www.luogu.com.cn/problem/list?tag=332">网络流24题</a>：（仅包含部分题目）</h2>
<h3 id="p2756-飞行员配对方案问题"><a href="https://www.luogu.com.cn/problem/P2756">P2756 飞行员配对方案问题</a></h3>
<p>显然的一个二分图匹配问题，还要输出方案；</p>
<p>我们考虑建图，首先一个飞行员只能匹配一个飞行员，所以我们从S向一类飞行员连边，从另一类飞行员向T连边，边权为1，然后对于能匹配的飞行员我们连接1或者inf的边（本体都可），完成建图。</p>
<p>关于输出方案：考虑残量网络上的反向边发生流量改变即可。</p>
<pre><code class="language-c++">#include &lt;algorithm&gt;
#include &lt;iostream&gt;
#include &lt;cstring&gt;
#include &lt;cstdio&gt;
#include &lt;cctype&gt;
#include &lt;cmath&gt;
using namespace std;
#define I inline
#define R register
#define inf 1073742823
#define FOR(i,begin,end) for(R int i=begin;i&lt;=end;++i)
#define ROF(i,begin,end) for(R int i=begin;i&gt;=end;--i)
#include&lt;queue&gt;
namespace IO{
    char buf[1&lt;&lt;21],*pa=buf,*pb=buf;
    char buffer[1&lt;&lt;21];int p1=-1;const int p2=(1&lt;&lt;21)-1; 
    I char gc(){return pa==pb&amp;&amp;(pb=(pa=buf)+fread(buf,1,1&lt;&lt;21,stdin),pa==pb)?EOF:*pa++;}
    template&lt;class T&gt;I void read(T &amp;x){
        x=0;R int y=0;R char ch=gc();
        for(;!isdigit(ch);ch=gc())y=ch=='-';
        for(;isdigit(ch);ch=gc())x=x*10+(ch^48);
        (y)&amp;&amp;(x=-x);return;}
    I void flush(){fwrite(buffer,1,p1+1,stdout);p1=-1;return;}
    I void pc(int ch){if(p1==p2)flush();buffer[++p1]=ch;return;}
    template&lt;class T&gt;I void write(T x){
        static char buf[20];static int len =-1;
        if(x&gt;=0){do buf[++len]=(x%10)^48,x/=10;while(x);}
        else{pc('-');do buf[++len]=(-(x%10))^48,x/=10;while(x);}
        while(len&gt;=0)pc(buf[len--]);
        return;}
}
using namespace IO;
int tot,s,t;
const int maxn = 50000+50;
const int maxm = 200000+200;
#define ci const int &amp;
struct edge{
    int u,v,f,n;
    I edge(ci uu =0,ci vv=0,ci ff=0,ci nn=0):u(uu),v(vv),f(ff),n(nn){}
}e[maxm];
int cnt=1,head[maxn],cur[maxn],gap[maxn],dis[maxn],mxflow=0;
I void add(ci u,ci v,ci f){
    e[++cnt]=edge(u,v,f,head[u]),head[u]=cnt;
    e[++cnt]=edge(v,u,0,head[v]),head[v]=cnt;
}
I void bfs(){
    queue&lt;int&gt;q;q.push(t),gap[dis[t]=1]++;
    while(!q.empty()){
        int u=q.front();q.pop();
        for(int ee=head[u],v;v=e[ee].v,ee;ee=e[ee].n)
        if(!dis[v])gap[dis[v]=dis[u]+1]++,q.push(v);
    }
}
int dfs(ci u,ci flow){
    if(u==t&amp;&amp;((mxflow+=flow)||1))return flow;
    int us=0,f;
    for(int ee=cur[u],v;cur[u]=ee,v=e[ee].v,ee;ee=e[ee].n)
        if(dis[v]==dis[u]-1){
            if(f=dfs(v,min(flow-us,e[ee].f)))
                e[ee].f-=f,e[ee^1].f+=f,us+=f;
            if(us==flow)return flow;
        }
    (--gap[dis[u]])?(++gap[++dis[u]]):dis[s]=tot+1;
    return us;
}
I int isap(){
    bfs();
    while(dis[s]&lt;=tot+1)
        memcpy(cur,head,sizeof head),
        dfs(s,inf);
    return mxflow;
}
int n,m;
int fa[maxn];
I int getf(int x){return x==fa[x]?x:fa[x]=getf(fa[x]);}
I void output(int x){
    write(x),pc(' ');
    for(int ee=head[x],v;v=e[ee].v,ee;ee=e[ee].n)
        if(ee&gt;=4*n+2)
            if(e[ee^1].f!=0&amp;&amp;v&gt;n)
                output(v-n);
    return;
}
signed main(){
    int x,y;
    read(n),read(m);
    s=0,t=2*n+1,tot=2*n+2;
    FOR(i,1,n)
        add(s,i,1),
        add(i+n,t,1);
    // cnt = 4n+1; 
    FOR(i,1,m)
        read(x),read(y),
        add(x,y+n,1);
    // cnt = 4n + 2m + 1;
    int ans = n - isap();
    FOR(i,1,n)fa[i]=i;
    for(int ee=4*n+2;ee&lt;=cnt;ee+=2)
        if(e[ee^1].f!=0)
            fa[getf(e[ee].v-n)]=getf(e[ee].u);
    FOR(i,1,n)
        if(getf(i)==i)
            output(i),pc('\n');
    write(ans);
    flush();
    return 0;
}

</code></pre>
<h3 id="p3254-圆桌问题"><a href="https://www.luogu.com.cn/problem/P3254">P3254 圆桌问题</a></h3>
<p>仍然是一个类似二分图的问题，也要输出方案。</p>
<p>我们考虑从S向每个单位连接流量为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>s</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">s_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的边，表示这个单位的人数，从每个餐桌向T连接流量为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>c</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">c_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的边，表示餐桌可以容纳的人数，对于所有的单位向所有的餐桌连一条流量为1的边，表示同一个单位来的代表不在同一个餐桌就餐,建图完成。输出方案与上题同理。</p>
<pre><code class="language-c++">#include &lt;algorithm&gt;
#include &lt;iostream&gt;
#include &lt;cstring&gt;
#include &lt;cstdio&gt;
#include &lt;cctype&gt;
#include &lt;cmath&gt;
#include &lt;vector&gt;
using namespace std;
#define I inline
#define R register
#define inf 1073742823
#define FOR(i,begin,end) for(R int i=begin;i&lt;=end;++i)
#define ROF(i,begin,end) for(R int i=begin;i&gt;=end;--i)
#include&lt;queue&gt;
namespace IO{
    char buf[1&lt;&lt;21],*pa=buf,*pb=buf;
    char buffer[1&lt;&lt;21];int p1=-1;const int p2=(1&lt;&lt;21)-1; 
    I char gc(){return pa==pb&amp;&amp;(pb=(pa=buf)+fread(buf,1,1&lt;&lt;21,stdin),pa==pb)?EOF:*pa++;}
    template&lt;class T&gt;I void read(T &amp;x){
        x=0;R int y=0;R char ch=gc();
        for(;!isdigit(ch);ch=gc())y=ch=='-';
        for(;isdigit(ch);ch=gc())x=x*10+(ch^48);
        (y)&amp;&amp;(x=-x);return;}
    I void flush(){fwrite(buffer,1,p1+1,stdout);p1=-1;return;}
    I void pc(int ch){if(p1==p2)flush();buffer[++p1]=ch;return;}
    template&lt;class T&gt;I void write(T x){
        static char buf[20];static int len =-1;
        if(x&gt;=0){do buf[++len]=(x%10)^48,x/=10;while(x);}
        else{pc('-');do buf[++len]=(-(x%10))^48,x/=10;while(x);}
        while(len&gt;=0)pc(buf[len--]);
        return;}
}
using namespace IO;
int s,t,tot;
const int maxn = 50000+50;
const int maxm = 200000+200;
#define ci const int &amp;
struct edge{
    int u,v,f,n;
    I edge(ci uu =0,ci vv=0,ci ff=0,ci nn=0):u(uu),v(vv),f(ff),n(nn){}
}e[maxm];
int cnt=1,head[maxn],cur[maxn],gap[maxn],dis[maxn],mxflow=0;
I void add(ci u,ci v,ci f){
    e[++cnt]=edge(u,v,f,head[u]),head[u]=cnt;
    e[++cnt]=edge(v,u,0,head[v]),head[v]=cnt;
}
I void bfs(){
    queue&lt;int&gt;q;q.push(t),gap[dis[t]=1]++;
    while(!q.empty()){
        int u=q.front();q.pop();
        for(int ee=head[u],v;v=e[ee].v,ee;ee=e[ee].n)
        if(!dis[v])gap[dis[v]=dis[u]+1]++,q.push(v);
    }
}
int dfs(ci u,ci flow){
    if(u==t&amp;&amp;((mxflow+=flow)||1))return flow;
    int us=0,f;
    for(int ee=cur[u],v;cur[u]=ee,v=e[ee].v,ee;ee=e[ee].n)
        if(dis[v]==dis[u]-1){
            if(f=dfs(v,min(flow-us,e[ee].f)))
                e[ee].f-=f,e[ee^1].f+=f,us+=f;
            if(us==flow)return flow;
        }
    (--gap[dis[u]])?(++gap[++dis[u]]):dis[s]=tot+1;
    return us;
}
int n,m,x,sum;
int rr[maxn],cc[maxn];
vector&lt;int&gt;ans[maxn];
signed main(){
    read(n),read(m);
    s=0,t=n+m+1;
    tot=t;
    FOR(i,1,n)
        read(rr[i]),sum+=rr[i],
        add(s,i,rr[i]);
    FOR(i,1,m)
        read(cc[i]),
        add(i+n,t,cc[i]);
    FOR(i,1,n)
        FOR(j,1,m)
            add(i,j+n,1);
    while(dis[s]&lt;=tot+1)memcpy(cur,head,sizeof(head)),dfs(s,inf);
    if(mxflow!=sum){
        puts(&quot;0&quot;);
        return 0;
    }
    write(1),pc('\n');
    for(int ee=2*(n+m+1);ee&lt;=cnt;ee+=2)
        if(e[ee^1].f!=0)
            ans[e[ee].u].push_back(e[ee].v);
    FOR(i,1,n){
        for(auto k:ans[i])
            write(k-n),pc(' ');
        pc('\n');
    }
    flush();
    return 0;
}
</code></pre>
<h3 id="p2764-最小路径覆盖问题"><a href="https://www.luogu.com.cn/problem/P2764">P2764 最小路径覆盖问题</a></h3>
<p>题目渐渐有了难度，<s>模板题洛谷也给了提示</s></p>
<p>我们考虑拆点，把一个点拆成两个点，第一个拆点表示出边，第二个拆点表示入边，我们把S向第一个拆点连一条流量为1的边，表示这个点的出度最大为1，把第二个拆点向T连接一条流量为1的边,表示这个点的最大入度为1，然后我们连接原图中的边，流量为1，表示存在路径，建图完成。</p>
<p>我们对原图跑一个最大流，显然就是匹配数，所以n-匹配数即为答案，关于路径输出和路径起点，与第一题同理。</p>
<pre><code class="language-c++">#include &lt;algorithm&gt;
#include &lt;iostream&gt;
#include &lt;cstring&gt;
#include &lt;cstdio&gt;
#include &lt;cctype&gt;
#include &lt;cmath&gt;
using namespace std;
#define I inline
#define R register
#define inf 1073742823
#define FOR(i,begin,end) for(R int i=begin;i&lt;=end;++i)
#define ROF(i,begin,end) for(R int i=begin;i&gt;=end;--i)
#include&lt;queue&gt;
namespace IO{
    char buf[1&lt;&lt;21],*pa=buf,*pb=buf;
    char buffer[1&lt;&lt;21];int p1=-1;const int p2=(1&lt;&lt;21)-1; 
    I char gc(){return pa==pb&amp;&amp;(pb=(pa=buf)+fread(buf,1,1&lt;&lt;21,stdin),pa==pb)?EOF:*pa++;}
    template&lt;class T&gt;I void read(T &amp;x){
        x=0;R int y=0;R char ch=gc();
        for(;!isdigit(ch);ch=gc())y=ch=='-';
        for(;isdigit(ch);ch=gc())x=x*10+(ch^48);
        (y)&amp;&amp;(x=-x);return;}
    I void flush(){fwrite(buffer,1,p1+1,stdout);p1=-1;return;}
    I void pc(int ch){if(p1==p2)flush();buffer[++p1]=ch;return;}
    template&lt;class T&gt;I void write(T x){
        static char buf[20];static int len =-1;
        if(x&gt;=0){do buf[++len]=(x%10)^48,x/=10;while(x);}
        else{pc('-');do buf[++len]=(-(x%10))^48,x/=10;while(x);}
        while(len&gt;=0)pc(buf[len--]);
        return;}
}
using namespace IO;
int tot,s,t;
const int maxn = 50000+50;
const int maxm = 200000+200;
#define ci const int &amp;
struct edge{
    int u,v,f,n;
    I edge(ci uu =0,ci vv=0,ci ff=0,ci nn=0):u(uu),v(vv),f(ff),n(nn){}
}e[maxm];
int cnt=1,head[maxn],cur[maxn],gap[maxn],dis[maxn],mxflow=0;
I void add(ci u,ci v,ci f){
    e[++cnt]=edge(u,v,f,head[u]),head[u]=cnt;
    e[++cnt]=edge(v,u,0,head[v]),head[v]=cnt;
}
I void bfs(){
    queue&lt;int&gt;q;q.push(t),gap[dis[t]=1]++;
    while(!q.empty()){
        int u=q.front();q.pop();
        for(int ee=head[u],v;v=e[ee].v,ee;ee=e[ee].n)
        if(!dis[v])gap[dis[v]=dis[u]+1]++,q.push(v);
    }
}
int dfs(ci u,ci flow){
    if(u==t&amp;&amp;((mxflow+=flow)||1))return flow;
    int us=0,f;
    for(int ee=cur[u],v;cur[u]=ee,v=e[ee].v,ee;ee=e[ee].n)
        if(dis[v]==dis[u]-1){
            if(f=dfs(v,min(flow-us,e[ee].f)))
                e[ee].f-=f,e[ee^1].f+=f,us+=f;
            if(us==flow)return flow;
        }
    (--gap[dis[u]])?(++gap[++dis[u]]):dis[s]=tot+1;
    return us;
}
I int isap(){
    bfs();
    while(dis[s]&lt;=tot+1)
        memcpy(cur,head,sizeof head),
        dfs(s,inf);
    return mxflow;
}
int n,m;
int fa[maxn];
I int getf(int x){return x==fa[x]?x:fa[x]=getf(fa[x]);}
I void output(int x){
    write(x),pc(' ');
    for(int ee=head[x],v;v=e[ee].v,ee;ee=e[ee].n)
        if(ee&gt;=4*n+2)
            if(e[ee^1].f!=0&amp;&amp;v&gt;n)
                output(v-n);
    return;
}
signed main(){
    int x,y;
    read(n),read(m);
    s=0,t=2*n+1,tot=2*n+2;
    FOR(i,1,n)
        add(s,i,1),
        add(i+n,t,1);
    // cnt = 4n+1; 
    FOR(i,1,m)
        read(x),read(y),
        add(x,y+n,1);
    // cnt = 4n + 2m + 1;
    int ans = n - isap();
    FOR(i,1,n)fa[i]=i;
    for(int ee=4*n+2;ee&lt;=cnt;ee+=2)
        if(e[ee^1].f!=0)
            fa[getf(e[ee].v-n)]=getf(e[ee].u);
    FOR(i,1,n)
        if(getf(i)==i)
            output(i),pc('\n');
    write(ans);
    flush();
    return 0;
}

</code></pre>
<h3 id="p2765-魔术球问题"><a href="https://www.luogu.com.cn/problem/P2765">P2765 魔术球问题</a></h3>
<p>显然这是一个需要不断加边的网络流，我们将一个数向与他组成完全平方数的数的拆点连边，S向原数连边，拆点向T连边，跑网络流即可，与上一题思想相似。</p>
<pre><code class="language-c++">#include &lt;algorithm&gt;
#include &lt;iostream&gt;
#include &lt;cstring&gt;
#include &lt;cstdio&gt;
#include &lt;cctype&gt;
#include &lt;cmath&gt;
using namespace std;
#define I inline
#define R register
#define inf 1073742823
#define FOR(i,begin,end) for(R int i=begin;i&lt;=end;++i)
#define ROF(i,begin,end) for(R int i=begin;i&gt;=end;--i)

namespace IO{
    char buf[1&lt;&lt;21],*pa=buf,*pb=buf;
    char buffer[1&lt;&lt;21];int p1=-1;const int p2=(1&lt;&lt;21)-1; 
    I char gc(){return pa==pb&amp;&amp;(pb=(pa=buf)+fread(buf,1,1&lt;&lt;21,stdin),pa==pb)?EOF:*pa++;}
    template&lt;class T&gt;I void read(T &amp;x){
        x=0;R int y=0;R char ch=gc();
        for(;!isdigit(ch);ch=gc())y=ch=='-';
        for(;isdigit(ch);ch=gc())x=x*10+(ch^48);
        (y)&amp;&amp;(x=-x);return;}
    I void flush(){fwrite(buffer,1,p1+1,stdout);p1=-1;return;}
    I void pc(int ch){if(p1==p2)flush();buffer[++p1]=ch;return;}
    template&lt;class T&gt;I void write(T x){
        static char buf[20];static int len =-1;
        if(x&gt;=0){do buf[++len]=(x%10)^48,x/=10;while(x);}
        else{pc('-');do buf[++len]=(-(x%10))^48,x/=10;while(x);}
        while(len&gt;=0)pc(buf[len--]);
        return;}
}
using namespace IO;

const int maxn = 50000+50;
const int maxm = 200000+200;
#define Ci const int &amp;

int n,m,s,t;

struct edge{
    int u,v,n,flow;
    I edge(Ci _u=0,Ci _v=0,Ci _n=0,Ci _flow=0):u(_u),v(_v),n(_n),flow(_flow){}
}e[maxm];
int cnt=1,head[maxn],cur[maxn];
I void add(Ci u,Ci v,Ci flow){
    e[++cnt]=edge(u,v,head[u],flow),head[u]=cnt;
    e[++cnt]=edge(v,u,head[v],0),head[v]=cnt;
}

int dep[maxn],pre[maxn];
#include&lt;queue&gt;
I bool bfs(){
    queue&lt;int&gt;q;
    memset(dep,0,sizeof dep);
    memcpy(cur,head,sizeof(head));
    dep[s]=1,q.push(s);
    while(!q.empty()){
        int u=q.front();q.pop();
        for(int ee=head[u],v;v=e[ee].v,ee;ee=e[ee].n)
            if(e[ee].flow&amp;&amp;dep[v]==0)
                dep[v]=dep[u]+1,q.push(v);
    }
    return dep[t];
}
int dfs(int u,int limit){
    if(limit==0||u==t)return limit;
    int flow=0,f;
    for(int ee=cur[u],v;cur[u]=ee,v=e[ee].v,ee;ee=e[ee].n)
        if(dep[v]==dep[u]+1&amp;&amp;(f=dfs(v,min(limit,e[ee].flow)))){
            flow+=f;
            limit-=f;
            e[ee].flow-=f;
            e[ee^1].flow+=f;
            pre[u&gt;&gt;1]=v&gt;&gt;1;
            if(!limit)break;
        }
    return flow;
}
I int dinic(){
    int ans=0;
    while(bfs())
            ans+=dfs(s,inf);
        return ans;
}
I bool check(int x){
    int xx=sqrt(x);
    return xx==x;
}
int top,now,sta[maxn],vis[maxn];
signed main(){
    read(n);
    s=maxn-10,t=maxn-9;
    while(top&lt;=n){
        ++now;
        add(s,now&lt;&lt;1,1);
        add((now&lt;&lt;1)|1,t,1);
        for(int i=sqrt(now)+1;i*i&lt;(now&lt;&lt;1);++i)
            add((i*i-now)&lt;&lt;1,(now &lt;&lt; 1)|1,1);
        int flow=dinic();
        if(!flow)
            sta[++top]=now;
    }
    write(now-1),pc('\n');
    FOR(i,1,n)
        if(!vis[sta[i]]){ 
            for(int u=sta[i];u&amp;&amp;u!=(t&gt;&gt;1);u=pre[u])
                vis[u]=1,write(u),pc(' ');
            pc('\n');
        }
    flush();
    return 0;
}
</code></pre>
<h3 id="p2766-最长不下降子序列问题"><a href="https://www.luogu.com.cn/problem/P2766">P2766 最长不下降子序列问题</a></h3>
<p>第一问我们考虑直接DP；<br>
第二问我们向原点和拆点连一条为1的边表示只能被选一次，然后对于DP值等于1的从源点S向其连边，流量为1，对于DP等于长度的，从其向汇点T连边，流量为1，表示路径可行性。<br>
第三问在残量网络上加源点到1的边，假如最后一个数在最长上升子序列上，连接一条向汇点的边，还有原点向拆点连边，流量为inf，表示可以无限使用。</p>
<pre><code class="language-c++">#include &lt;algorithm&gt;
#include &lt;iostream&gt;
#include &lt;cstring&gt;
#include &lt;cstdio&gt;
#include &lt;cctype&gt;
#include &lt;cmath&gt;
using namespace std;
#define I inline
#define R register
#define inf 1073742823
#define FOR(i,begin,end) for(R int i=begin;i&lt;=end;++i)
#define ROF(i,begin,end) for(R int i=begin;i&gt;=end;--i)
#include&lt;queue&gt;
namespace IO{
    char buf[1&lt;&lt;21],*pa=buf,*pb=buf;
    char buffer[1&lt;&lt;21];int p1=-1;const int p2=(1&lt;&lt;21)-1; 
    I char gc(){return pa==pb&amp;&amp;(pb=(pa=buf)+fread(buf,1,1&lt;&lt;21,stdin),pa==pb)?EOF:*pa++;}
    template&lt;class T&gt;I void read(T &amp;x){
        x=0;R int y=0;R char ch=gc();
        for(;!isdigit(ch);ch=gc())y=ch=='-';
        for(;isdigit(ch);ch=gc())x=x*10+(ch^48);
        (y)&amp;&amp;(x=-x);return;}
    I void flush(){fwrite(buffer,1,p1+1,stdout);p1=-1;return;}
    I void pc(int ch){if(p1==p2)flush();buffer[++p1]=ch;return;}
    template&lt;class T&gt;I void write(T x){
        static char buf[20];static int len =-1;
        if(x&gt;=0){do buf[++len]=(x%10)^48,x/=10;while(x);}
        else{pc('-');do buf[++len]=(-(x%10))^48,x/=10;while(x);}
        while(len&gt;=0)pc(buf[len--]);
        return;}
}
using namespace IO;
int tot,s,t;
const int maxn = 5000+50;
const int maxm = 200000+200;
#define ci const int &amp;
struct edge{
    int u,v,f,n;
    I edge(ci uu =0,ci vv=0,ci ff=0,ci nn=0):u(uu),v(vv),f(ff),n(nn){}
}e[maxm];
int cnt=1,head[maxn],cur[maxn],gap[maxn],dis[maxn];
I void add(ci u,ci v,ci f){
    e[++cnt]=edge(u,v,f,head[u]),head[u]=cnt;
    e[++cnt]=edge(v,u,0,head[v]),head[v]=cnt;
}
I void bfs(){
    memset(dis,0,sizeof dis);
    memset(gap,0,sizeof gap);
    queue&lt;int&gt;q;q.push(t),gap[dis[t]=1]++;
    while(!q.empty()){
        int u=q.front();q.pop();
        for(int ee=head[u],v;v=e[ee].v,ee;ee=e[ee].n)
        if(!dis[v])gap[dis[v]=dis[u]+1]++,q.push(v);
    }
}
int dfs(ci u,ci flow){
    if(u==t)return flow;
    int us=0,f;
    for(int ee=cur[u],v;cur[u]=ee,v=e[ee].v,ee;ee=e[ee].n)
        if(dis[v]==dis[u]-1){
            if(f=dfs(v,min(flow-us,e[ee].f)))
                e[ee].f-=f,e[ee^1].f+=f,us+=f;
            if(us==flow)return flow;
        }
    (--gap[dis[u]])?(++gap[++dis[u]]):dis[s]=tot+1;
    return us;
}
I int isap(){
    int ans=0;
    bfs();
    while(dis[s]&lt;=tot+1)
        memcpy(cur,head,sizeof head),
        ans+=dfs(s,inf);
    return ans;
}
int n,a[maxn],dp[maxn];
#define ls(i) (i&lt;&lt;1)
#define rs(i) (i&lt;&lt;1|1)
signed main(){
    read(n);
    FOR(i,1,n)read(a[i]),dp[i]=1;
    FOR(i,1,n)
        FOR(j,1,i-1)
            if(a[j]&lt;=a[i])dp[i]=max(dp[i],dp[j]+1);
    int len;FOR(i,1,n)len=max(len,dp[i]);
    write(len),pc('\n');
    s=0,t=1;tot=2+2*n;
    FOR(i,1,n)if(dp[i]==1)add(s,ls(i),1);
    FOR(i,1,n)if(dp[i]==len)add(rs(i),t,1);
    FOR(i,1,n)add(ls(i),rs(i),1);
    FOR(i,1,n)
        FOR(j,1,i-1)
            if(a[j]&lt;=a[i]&amp;&amp;dp[j]+1==dp[i])
                add(rs(j),ls(i),1);
    int last;
    write(last=isap()),pc('\n');
    add(ls(1),rs(1),inf),add(s,ls(1),inf);
    if(dp[n]==len)add(ls(n),rs(n),inf),add(rs(n),t,inf);
    write(last+isap()),pc('\n');
    flush();
    return 0;
}
</code></pre>
<h3 id="p2762-太空飞行计划问题"><a href="https://www.luogu.com.cn/problem/P2762">P2762 太空飞行计划问题</a></h3>
<p>最大权闭合图问题，考虑如下建图方案，由源点S向每个实验仪器连边，流量为费用，由实验向汇点T连边，流量为获利，由实验仪器向对应的实验连边，流量为inf，对所建图求最小割，即最小割为ans，则最后答案为总实验的获利-ans；<br>
（若割边是源点到仪器则表示仪器不选用，若割边为实验则代表实验不选用）</p>
<h3 id="p1251-餐巾计划问题"><a href="https://www.luogu.com.cn/problem/P1251">P1251 餐巾计划问题</a></h3>
<p>(<s>之前写的忘了保存挂了，我哭了，嘤嘤嘤</s>)<br>
我们考虑如下建图方式<br>
将每一天拆为两个点，分别表示旧餐巾和新餐巾。<br>
（消耗=产生=r）（不特别说明，费用为零，流量为inf）<br>
由源点向每天的旧餐巾连接一条流量为产生的边，表示每天产生的旧餐巾。<br>
由每天的新餐巾向汇点连接一条流量为消耗的边，表示每天消耗的新餐巾。<br>
由源点向每天的新餐巾连接一条费用的p的边，表示每天购买的新餐巾。<br>
由每天的旧餐巾向时间加m/n处的新餐巾连接一条费用为f/s的边，表示快/慢洗的餐巾。<br>
这样建图我们保证了，最大流一定为每天消耗的新餐巾的总和，最小费用即为最小花费。</p>
<pre><code class="language-c++">#include &lt;algorithm&gt;
#include &lt;iostream&gt;
#include &lt;cstring&gt;
#include &lt;cstdio&gt;
#include &lt;cctype&gt;
#include &lt;cmath&gt;
#include &lt;queue&gt;
#define int long long
using namespace std;
#define I inline
#define R register
#define inf 2147483647
#define FOR(i,begin,end) for(R int i=begin;i&lt;=end;++i)
#define ROF(i,begin,end) for(R int i=begin;i&gt;=end;--i)

namespace IO{
    char buf[1&lt;&lt;21],*pa=buf,*pb=buf;
    char buffer[1&lt;&lt;21];int p1=-1;const int p2=(1&lt;&lt;21)-1; 
    I char gc(){return pa==pb&amp;&amp;(pb=(pa=buf)+fread(buf,1,1&lt;&lt;21,stdin),pa==pb)?EOF:*pa++;}
    template&lt;class T&gt;I void read(T &amp;x){
        x=0;R int y=0;R char ch=gc();
        for(;!isdigit(ch);ch=gc())y=ch=='-';
        for(;isdigit(ch);ch=gc())x=x*10+(ch^48);
        (y)&amp;&amp;(x=-x);return;}
    I void flush(){fwrite(buffer,1,p1+1,stdout);p1=-1;return;}
    I void pc(int ch){if(p1==p2)flush();buffer[++p1]=ch;return;}
    template&lt;class T&gt;I void write(T x){
        static char buf[20];static int len =-1;
        if(x&gt;=0){do buf[++len]=(x%10)^48,x/=10;while(x);}
        else{pc('-');do buf[++len]=(-(x%10))^48,x/=10;while(x);}
        while(len&gt;=0)pc(buf[len--]);
        return;}
}
using namespace IO;

const int maxn = 50000+500;
const int maxm = 200000+2000;
#define ci const int &amp;

struct edge{
    int u,v,f,w,n;
    I edge(ci uu=0,ci vv=0,ci ff=0,ci ww=0,ci nn=0):u(uu),v(vv),f(ff),w(ww),n(nn){}
}e[maxm];
int dis[maxn],vis[maxn],cur[maxn],head[maxn],cnt=1,n,m,s,t;
int cost=0,flow=0;
I void add(ci u,ci v,ci f,ci w){
    e[++cnt]=edge(u,v,f,w,head[u]),head[u]=cnt;
    e[++cnt]=edge(v,u,0,-w,head[v]),head[v]=cnt;
}
I bool spfa(ci s,ci t){
    memset(vis,0,sizeof vis);
    memset(dis,0x3f,sizeof dis);
    deque&lt;int&gt;q;q.push_front(t);
    vis[t]=1,dis[t]=0;
    while(!q.empty()){
        int u=q.front();q.pop_front();
        for(int ee=head[u],v;v=e[ee].v,ee;ee=e[ee].n)
            if(e[ee^1].f&gt;0&amp;&amp;dis[v]&gt;dis[u]-e[ee].w){
                dis[v]=dis[u]-e[ee].w;
                if(!vis[v])vis[v]=1,(!q.empty()&amp;&amp;dis[q.front()]&gt;dis[v])?
                q.push_front(v):
                q.push_back(v);
            }
        vis[u]=0;
    }
    return dis[s]==0x3f3f3f3f3f3f3f3f?0:1;
}
int dfs(ci u,ci ff){
    if(u==t)return vis[t]=1,ff;
    int us=0,f;vis[u]=1;
    for(int ee=cur[u],v;cur[u]=ee,v=e[ee].v,ee;ee=e[ee].n)
        if(vis[v]==0&amp;&amp;e[ee].f&gt;0&amp;&amp;dis[u]-e[ee].w==dis[v]){
            if((f=dfs(v,min(e[ee].f,ff-us)))&gt;0)
                cost+=f*e[ee].w,e[ee].f-=f,e[ee^1].f+=f,us+=f;
            if(us==ff)break;
        }
    return us;
}
I void cost_flow(){
    while(spfa(s,t)){
        vis[t]=1;
        while(vis[t]){
            memcpy(cur,head,sizeof head);
            memset(vis,0,sizeof vis);
            flow+=dfs(s,inf);
        }
    }
}
int r[maxn];
#define ls(o) (o&lt;&lt;1)
#define rs(o) (o&lt;&lt;1|1)
signed main(){
    read(n);
    int p,t1,c1,t2,c2;
    s=rs(0),t=ls(n+2);
    FOR(i,1,n)
        read(r[i]),add(s,ls(i),r[i],0),add(rs(i),t,r[i],0);
    read(p),read(t1),read(c1),read(t2),read(c2);
    FOR(i,1,n){
        add(s,rs(i),inf,p);
        if(i+1&lt;=n)add(ls(i),ls(i+1),inf,0);
        if(i+t1&lt;=n)add(ls(i),rs(i+t1),inf,c1);
        if(i+t2&lt;=n)add(ls(i),rs(i+t2),inf,c2);
    }
    cost_flow();
    write(cost);
    flush();
    return 0;
}
</code></pre>
<p>###<a href="https://www.luogu.com.cn/problem/P4013">P4013 数字梯形问题</a></p>
<p>我们考虑拆点控制流量，然后就没了。<br>
还有无法在残量网络上继续加边跑最小费用。<br>
洛谷好像不给数据，然后手写了一个数据生成。</p>
<h3 id="第一问">第一问：</h3>
<p>我们把拆点和原点连接一条流量为1（表次数限制），费用为-点值（表示费用），然后按照题意连边即可。</p>
<h3 id="第二问">第二问：</h3>
<p>将第一问拆点和原点的连边流量改为inf（表无次数限制）。<br>
同时需要注意最下边一行的点，连接汇点T的边流量也要改为inf。</p>
<h3 id="第三问">第三问：</h3>
<p>除了源点向第一行的点的连边流量为1外，其他的流量为inf（表无次数限制）</p>
<pre><code class="language-c++">#include &lt;bits/stdc++.h&gt;
using namespace std;
#define I inline
#define R register
#define inf 1073742823
#define FOR(i,begin,end) for(R int i=begin;i&lt;=end;++i)
#define ROF(i,begin,end) for(R int i=begin;i&gt;=end;--i)
namespace IO{
	char buf[1&lt;&lt;21],*pa=buf,*pb=buf;
	char buffer[1&lt;&lt;21];int p1=-1;const int p2=(1&lt;&lt;21)-1; 
	I char gc(){return pa==pb&amp;&amp;(pb=(pa=buf)+fread(buf,1,1&lt;&lt;21,stdin),pa==pb)?EOF:*pa++;}
	template&lt;class T&gt;I void read(T &amp;x){
		x=0;R int y=0;R char ch=gc();
		for(;!isdigit(ch);ch=gc())y=ch=='-';
		for(;isdigit(ch);ch=gc())x=(x&lt;&lt;3)+(x&lt;&lt;1)+(ch^48);
		(y)&amp;&amp;(x=-x);return;}
	I void flush(){fwrite(buffer,1,p1+1,stdout);p1=-1;return;}
	I void pc(int ch){if(p1==p2)flush();buffer[++p1]=ch;return;}
	template&lt;class T&gt;I void write(T x){
		static char buf[20];static int len =-1;
		if(x&gt;=0){do buf[++len]=(x%10)^48,x/=10;while(x);}
		else{pc('-');do buf[++len]=(-(x%10))^48,x/=10;while(x);}
		while(len&gt;=0)pc(buf[len--]);
		return;}
}
using namespace IO;
int main(){
	srand(GetTickCount());
	int n=10,m=2;
	write(m),pc(' '),write(n),pc('\n');
	FOR(i,m,m+n-1)
	{
        FOR(j,1,i)write(rand()%100),pc(' ');
		pc('\n');
	}
	flush();
	return 0;
}
</code></pre>
<p>题目的代码</p>
<pre><code class="language-c++">#include &lt;algorithm&gt;
#include &lt;iostream&gt;
#include &lt;cstring&gt;
#include &lt;cstdio&gt;
#include &lt;cctype&gt;
#include &lt;cmath&gt;
#include &lt;queue&gt;
using namespace std;
#define I inline
#define R register
#define inf 1073742823
#define FOR(i,begin,end) for(R int i=begin;i&lt;=end;++i)
#define ROF(i,begin,end) for(R int i=begin;i&gt;=end;--i)

namespace IO{
    char buf[1&lt;&lt;21],*pa=buf,*pb=buf;
    char buffer[1&lt;&lt;21];int p1=-1;const int p2=(1&lt;&lt;21)-1; 
    I char gc(){return pa==pb&amp;&amp;(pb=(pa=buf)+fread(buf,1,1&lt;&lt;21,stdin),pa==pb)?EOF:*pa++;}
    template&lt;class T&gt;I void read(T &amp;x){
        x=0;R int y=0;R char ch=gc();
        for(;!isdigit(ch);ch=gc())y=ch=='-';
        for(;isdigit(ch);ch=gc())x=x*10+(ch^48);
        (y)&amp;&amp;(x=-x);return;}
    I void flush(){fwrite(buffer,1,p1+1,stdout);p1=-1;return;}
    I void pc(int ch){if(p1==p2)flush();buffer[++p1]=ch;return;}
    template&lt;class T&gt;I void write(T x){
        static char buf[20];static int len =-1;
        if(x&gt;=0){do buf[++len]=(x%10)^48,x/=10;while(x);}
        else{pc('-');do buf[++len]=(-(x%10))^48,x/=10;while(x);}
        while(len&gt;=0)pc(buf[len--]);
        return;}
}
using namespace IO;

const int maxn = 50000+500;
const int maxm = 2000000+2000;
#define ci const int &amp;

struct edge{
    int u,v,f,w,n;
    I edge(ci uu=0,ci vv=0,ci ff=0,ci ww=0,ci nn=0):u(uu),v(vv),f(ff),w(ww),n(nn){}
}e[maxm];
int dis[maxn],vis[maxn],cur[maxn],head[maxn],cnt=1,n,m,s,t;
int cost=0,flow=0;
I void add(ci u,ci v,ci f,ci w){
    e[++cnt]=edge(u,v,f,w,head[u]),head[u]=cnt;
    e[++cnt]=edge(v,u,0,-w,head[v]),head[v]=cnt;
}
I bool spfa(ci s,ci t){
    memset(vis,0,sizeof vis);
    memset(dis,0x3f,sizeof dis);
    deque&lt;int&gt;q;q.push_front(t);
    vis[t]=1,dis[t]=0;
    while(!q.empty()){
        int u=q.front();q.pop_front();
        for(int ee=head[u],v;v=e[ee].v,ee;ee=e[ee].n)
            if(e[ee^1].f&gt;0&amp;&amp;dis[v]&gt;dis[u]-e[ee].w){
                dis[v]=dis[u]-e[ee].w;
                if(!vis[v])vis[v]=1,(!q.empty()&amp;&amp;dis[q.front()]&gt;dis[v])?
                q.push_front(v):
                q.push_back(v);
            }
        vis[u]=0;
    }
    return dis[s]==0x3f3f3f3f?0:1;
}
int dfs(ci u,ci ff){
    if(u==t)return vis[t]=1,ff;
    int us=0,f;vis[u]=1;
    for(int ee=cur[u],v;cur[u]=ee,v=e[ee].v,ee;ee=e[ee].n)
        if(vis[v]==0&amp;&amp;e[ee].f&gt;0&amp;&amp;dis[u]-e[ee].w==dis[v]){
            if((f=dfs(v,min(e[ee].f,ff-us)))&gt;0)
                cost+=f*e[ee].w,e[ee].f-=f,e[ee^1].f+=f,us+=f;
            if(us==ff)break;
        }
    return us;
}
I void cost_flow(){
    while(spfa(s,t)){
        vis[t]=1;
        while(vis[t]){
            memcpy(cur,head,sizeof head);
            memset(vis,0,sizeof vis);
            flow+=dfs(s,inf);
        }
    }
}
I void clear(){
    memset(head,0,sizeof head);
    memset(e,0,sizeof e);
    cnt=1;cost=0,flow=0;
}
#define ls(o) (o&lt;&lt;1)
#define rs(o) (o&lt;&lt;1|1)
int a[50][50],id[50][50];
signed main(){
    s=ls(0),t=rs(0);
    int tot=0;
    read(m),read(n);
    FOR(i,m,m+n-1)
        FOR(j,1,i)
            read(a[i][j]),id[i][j]=++tot;
    // work 1
    FOR(i,1,m)
        add(s,ls(id[m][i]),1,0);
    FOR(i,m,m+n-1)
        FOR(j,1,i)
            add(ls(id[i][j]),rs(id[i][j]),1,-a[i][j]);
    FOR(i,m,m+n-2)
        FOR(j,1,i)
            add(rs(id[i][j]),ls(id[i+1][j]),1,0),
            add(rs(id[i][j]),ls(id[i+1][j+1]),1,0);
    FOR(i,1,m+n-1)
        add(rs(id[m+n-1][i]),t,1,0);
    cost_flow();
    write(-cost),pc('\n');
    // work 2
    clear();
    FOR(i,1,m)
        add(s,ls(id[m][i]),1,0);
    FOR(i,m,m+n-1)
        FOR(j,1,i)
            add(ls(id[i][j]),rs(id[i][j]),inf,-a[i][j]);
    FOR(i,m,m+n-2)
        FOR(j,1,i)
            add(rs(id[i][j]),ls(id[i+1][j]),1,0),
            add(rs(id[i][j]),ls(id[i+1][j+1]),1,0);
    FOR(i,1,m+n-1)
        add(rs(id[m+n-1][i]),t,1,0);
    cost_flow();
    write(-cost),pc('\n');
    // work 3
    clear();
    FOR(i,1,m)
        add(s,ls(id[m][i]),1,0);
    FOR(i,m,m+n-1)
        FOR(j,1,i)
            add(ls(id[i][j]),rs(id[i][j]),inf,-a[i][j]);
    FOR(i,m,m+n-2)
        FOR(j,1,i)
            add(rs(id[i][j]),ls(id[i+1][j]),inf,0),
            add(rs(id[i][j]),ls(id[i+1][j+1]),inf,0);
    FOR(i,1,m+n-1)
        add(rs(id[m+n-1][i]),t,inf,0);
    cost_flow();
    write(-cost),pc('\n');
    flush();
    return 0;
}
</code></pre>
<p>大概本博客就完结了，网络流二十四题的题目连接直接放到下面了：</p>
<p><s><a href="https://www.luogu.com.cn/problem/P1251">P1251 餐巾计划问题</a></s><br>
<a href="https://www.luogu.com.cn/problem/P1251">P2754 [CTSC1999]家园 / 星际转移问题</a><br>
<s><a href="https://www.luogu.com.cn/problem/P2756">P2756 飞行员配对方案问题</a></s><br>
<a href="https://www.luogu.com.cn/problem/P2761">P2761 软件补丁问题</a><br>
<s><a href="https://www.luogu.com.cn/problem/P2762">P2762 太空飞行计划问题</a></s><br>
<a href="https://www.luogu.com.cn/problem/P2763">P2763 试题库问题</a><br>
<s><a href="https://www.luogu.com.cn/problem/P2764">P2764 最小路径覆盖问题</a></s><br>
<s><a href="https://www.luogu.com.cn/problem/P2765">P2765 魔术球问题</a></s><br>
<s><a href="https://www.luogu.com.cn/problem/P2766">P2766 最长不下降子序列问题</a></s><br>
<a href="https://www.luogu.com.cn/problem/P2770">P2770 航空路线问题</a><br>
<s><a href="https://www.luogu.com.cn/problem/P2774">P2774 方格取数问题</a></s><br>
<a href="https://www.luogu.com.cn/problem/P2775">P2775 机器人路径规划问题</a><br>
<s><a href="https://www.luogu.com.cn/problem/P3254">P3254 圆桌问题</a></s><br>
<a href="https://www.luogu.com.cn/problem/P3355">P3355 骑士共存问题</a><br>
<a href="https://www.luogu.com.cn/problem/P3356">P3356 火星探险问题</a><br>
[P3357 最长k可重线段集问题]https://www.luogu.com.cn/problem/P3357)<br>
<a href="https://www.luogu.com.cn/problem/P3358">P3358 最长k可重区间集问题</a><br>
<a href="https://www.luogu.com.cn/problem/P4009">P4009 汽车加油行驶问题</a><br>
<a href="https://www.luogu.com.cn/problem/P4011">P4011 孤岛营救问题</a><br>
<a href="https://www.luogu.com.cn/problem/P4012">P4012 深海机器人问题</a><br>
<s><a href="https://www.luogu.com.cn/problem/P4013">P4013 数字梯形问题</a></s><br>
<a href="https://www.luogu.com.cn/problem/P4014">P4014 分配问题</a><br>
<a href="https://www.luogu.com.cn/problem/P4015">P4015 运输问题</a><br>
<a href="https://www.luogu.com.cn/problem/P4016">P4016 负载平衡问题</a></p>
<p>##当然网络流24题只是比较基础的入门题目，本博客只提供入门方面的参考</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[UOJ题单]]></title>
        <id>https://luxin-oi.github.io/post/uoj-ti-dan/</id>
        <link href="https://luxin-oi.github.io/post/uoj-ti-dan/">
        </link>
        <updated>2020-03-04T17:31:41.000Z</updated>
        <content type="html"><![CDATA[<p>圆形障碍最短路-&gt;<a href="https://luxin-oi.github.io/post/thuwc2016-ding-xiang-yue-ye">uoj277定向越野</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[题单索引]]></title>
        <id>https://luxin-oi.github.io/post/ti-dan-suo-yin/</id>
        <link href="https://luxin-oi.github.io/post/ti-dan-suo-yin/">
        </link>
        <updated>2020-03-04T17:22:12.000Z</updated>
        <content type="html"><![CDATA[<p><a href="https://luxin-oi.github.io/post/atcoder-ti-dan">Atcoder题单</a></p>
<p><a href="https://luxin-oi.github.io/post/bzoj-ti-dan">BZOJ题单</a></p>
<p><a href="https://luxin-oi.github.io/post/cf-ti-dan">CF题单</a></p>
<p><a href="https://luxin-oi.github.io/post/hdu-ti-dan">HDU题单</a></p>
<p><a href="https://luxin-oi.github.io/post/poj-ti-dan">POJ题单</a></p>
<p><a href="https://luxin-oi.github.io/post/uoj-ti-dan">UOJ题单</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Atcoder题单]]></title>
        <id>https://luxin-oi.github.io/post/atcoder-ti-dan/</id>
        <link href="https://luxin-oi.github.io/post/atcoder-ti-dan/">
        </link>
        <updated>2020-03-04T17:21:03.000Z</updated>
        <content type="html"><![CDATA[<h2 id="atcoder"><a href="https://atcoder.jp/">Atcoder</a></h2>
<p>咕咕咕</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[CF题单]]></title>
        <id>https://luxin-oi.github.io/post/cf-ti-dan/</id>
        <link href="https://luxin-oi.github.io/post/cf-ti-dan/">
        </link>
        <updated>2020-03-04T17:20:22.000Z</updated>
        <content type="html"><![CDATA[<h2 id="codeforces"><a href="https://codeforces.com/">Codeforces</a></h2>
<h3 id="近期不想带cf比赛原因自己太弱">近期不想带CF比赛（原因：自己太弱）</h3>
<p>咕咕咕</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[HDU题单]]></title>
        <id>https://luxin-oi.github.io/post/hdu-ti-dan/</id>
        <link href="https://luxin-oi.github.io/post/hdu-ti-dan/">
        </link>
        <updated>2020-03-04T17:19:50.000Z</updated>
        <content type="html"><![CDATA[<h2 id="hud"><a href="http://acm.hdu.edu.cn/">HUD</a></h2>
<p>计算几何：<br>
-<a href="https://luxin-oi.github.io/post/you-can-solve-a-geometry-problem-too/">1086</a><br>
-<a href="https://luxin-oi.github.io/post/lifting-the-stone/">1115</a></p>
]]></content>
    </entry>
</feed>